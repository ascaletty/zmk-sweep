// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

&mt {
    tapping-term-ms = <400>;
    flavor = "tap-preferred";
};

&mmv {
    time-to-max-speed-ms = <200>;
    acceleration-exponent = <2>;
    delay-ms = <0>;
};

/ {
    behaviors {
        num_word: behavior_num_word {
            compatible = "zmk,behavior-caps-word";
            label = "NUM_WORD";
            #binding-cells = <0>;
            layers = <1>;                                // insert location of numbers layer here
            continue-list = <BACKSPACE DELETE DOT COMMA SLASH ASTERISK>;  // adjust as desired
            ignore-numbers;                                // numbers don't deactivate the layer
        };

        pinkyhm: pinkyhm {
            compatible = "zmk,behavior-hold-tap";
            label = "PINKYHM";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <349>;
            flavor = "tap-preferred";
        };

        underscore: underscore {
            compatible = "zmk,behavior-mod-morph";
            label = "UNDERSCORE";
            bindings = <&kp SQT>, <&kp UNDERSCORE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
            keep-mods = <(MOD_LSFT)>;
        };

        slash: slash {
            compatible = "zmk,behavior-mod-morph";
            label = "SLASH";
            bindings = <&kp SLASH>, <&kp LESS_THAN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
            keep-mods = <(MOD_LSFT)>;
        };

        dash: dash {
            compatible = "zmk,behavior-mod-morph";
            label = "DASH";
            bindings = <&kp MINUS>, <&kp DOUBLE_QUOTES>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
            keep-mods = <(MOD_LSFT)>;
        };

        enter: enter {
            compatible = "zmk,behavior-hold-tap";
            label = "ENTER";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <350>;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };

    combos {
        compatible = "zmk,combos";

        homepanic {
            bindings = <&to 0>;
            key-positions = <31 32>;
        };

        settings {
            bindings = <&mo 4>;
            key-positions = <31 30>;
            layers = <0 2 4 3 1>;
        };

        nav {
            bindings = <&to 3>;
            key-positions = <30 33>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&mt ESCAPE B         &kp L           &kp D             &kp W               &kp Z        &underscore    &kp F               &kp O         &kp U           &kp J
&pinkyhm LEFT_GUI N  &mt LEFT_ALT R  &mt LEFT_SHIFT T  &mt LEFT_CONTROL S  &kp G        &kp Y          &mt LEFT_CONTROL H  &mt LSHIFT A  &mt LEFT_ALT E  &pinkyhm LEFT_GUI I
&kp Q                &kp X           &kp M             &kp C               &kp V        &kp K          &kp P               &kp PERIOD    &dash           &slash
                                                       &kp SPACE           &kp SPACE    &kp BACKSPACE  &num_word
            >;
        };

        right_layer {
            bindings = <
&trans  &trans  &trans  &trans          &trans       &none          &kp N7  &kp N8  &kp N9  &kp ASTERISK
&trans  &trans  &trans  &trans          &trans       &none          &kp N4  &kp N5  &kp N6  &kp SLASH
&trans  &trans  &trans  &trans          &trans       &kp PERIOD     &kp N1  &kp N2  &kp N3  &trans
                        &enter 2 ENTER  &kp SPACE    &kp BACKSPACE  &kp N0
            >;
        };

        left_layer {
            bindings = <
&kp EQUAL  &kp LBKT  &kp AMPERSAND  &kp ASTERISK  &kp QUESTION    &kp RIGHT_BRACKET  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE  &kp COLON      &kp PIPE
&kp EXCL   &kp AT    &kp HASH       &kp DLLR      &kp PRCNT       &kp LEFT_BRACKET   &kp LEFT_PARENTHESIS   &kp LEFT_BRACE   &kp SEMICOLON  &kp BACKSLASH
&kp EQUAL  &trans    &trans         &trans        &trans          &kp AMPS           &kp UNDER              &kp PLUS         &kp TILDE      &kp GRAVE
                                    &trans        &trans          &kp COMMA          &trans
            >;
        };

        nav {
            bindings = <
&trans       &kp LS(TAB)     &mmv MOVE_UP    &trans           &trans    &trans    &mkp RCLK       &mkp LCLK     &trans     &trans
&kp RA(TAB)  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &trans    &kp LEFT  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT  &trans
&trans       &trans          &trans          &trans           &trans    &trans    &trans          &trans        &trans     &trans
                                             &trans           &trans    &trans    &trans
            >;
        };

        settings {
            bindings = <
&sys_reset   &trans  &trans  &bt BT_CLR_ALL  &bt BT_SEL 0    &trans  &trans  &trans  &trans  &sys_reset
&bootloader  &trans  &trans  &trans          &bt BT_SEL 1    &trans  &trans  &trans  &trans  &bootloader
&trans       &trans  &trans  &bt BT_CLR      &bt BT_SEL 2    &trans  &trans  &trans  &trans  &trans
                             &trans          &trans          &trans  &trans
            >;
        };
    };
};
