// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt { tapping-term-ms = <400>; };

/ {
    behaviors {
        pinkyhm: pinkyhm {
            compatible = "zmk,behavior-hold-tap";
            label = "PINKYHM";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <349>;
            flavor = "tap-preferred";
        };

        underscore: underscore {
            compatible = "zmk,behavior-mod-morph";
            label = "UNDERSCORE";
            bindings = <&kp SQT>, <&kp UNDERSCORE>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
            keep-mods = <(MOD_LSFT)>;
        };

        slash: slash {
            compatible = "zmk,behavior-mod-morph";
            label = "SLASH";
            bindings = <&kp SLASH>, <&kp LESS_THAN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
            keep-mods = <(MOD_LSFT)>;
        };

        dash: dash {
            compatible = "zmk,behavior-mod-morph";
            label = "DASH";
            bindings = <&kp MINUS>, <&kp DOUBLE_QUOTES>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
            keep-mods = <(MOD_LSFT)>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp B                &kp L  &kp D             &kp W               &kp Z        &underscore    &kp F               &kp O         &kp U  &kp J
&pinkyhm LEFT_GUI N  &kp R  &mt LEFT_SHIFT T  &mt LEFT_CONTROL S  &kp G        &kp Y          &mt LEFT_CONTROL H  &mt LSHIFT A  &kp E  &pinkyhm LEFT_GUI I
&kp Q                &kp X  &kp M             &kp C               &kp V        &kp K          &kp P               &kp PERIOD    &dash  &slash
                                              &lt 2 ENTER         &kp SPACE    &kp BACKSPACE  &to 1
            >;
        };

        right_layer {
            bindings = <
&trans  &trans  &trans  &trans      &trans       &kp HOME    &kp N7  &kp N8  &kp N9  &kp COLON
&trans  &trans  &trans  &trans      &trans       &kp LEFT    &kp N4  &kp N5  &kp N6  &kp SEMI
&trans  &trans  &trans  &trans      &trans       &kp PERIOD  &kp N1  &kp N2  &kp N3  &trans
                        &kp ESCAPE  &kp SPACE    &to 2       &kp N0
            >;
        };

        left_layer {
            bindings = <
&trans    &kp LBKT  &kp LBRC  &kp RBRC  &trans       &kp CARET  &kp LPAR   &kp RPAR   &kp RBKT  &kp TILDE
&kp EXCL  &kp AT    &kp HASH  &kp DLLR  &kp PRCNT    &kp ASTRK  &kp MINUS  &kp EQUAL  &kp BSLH  &kp GRAVE
&trans    &trans    &trans    &trans    &trans       &kp AMPS   &kp UNDER  &kp PLUS   &kp PIPE  &trans
                              &trans    &trans       &trans     &trans
            >;
        };

        tri_layer {
            bindings = <
&sys_reset   &trans  &trans  &trans      &bt BT_SEL 0    &trans  &trans  &trans  &trans  &sys_reset
&bootloader  &trans  &trans  &trans      &bt BT_SEL 1    &trans  &trans  &trans  &trans  &bootloader
&trans       &trans  &trans  &bt BT_CLR  &bt BT_SEL 2    &trans  &trans  &trans  &trans  &trans
                             &trans      &trans          &trans  &trans
            >;
        };

        nav {
            bindings = <
&trans  &trans  &mmv MOVE_UP  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans        &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans        &trans  &trans    &trans  &trans  &trans  &trans  &trans
                              &trans  &trans    &trans  &trans
            >;
        };
    };
};
